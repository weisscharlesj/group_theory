
import numpy as np


def R(a, n, k):
    """Calculates the influence of a single, stationary atom's x,y,z vectors
    when calculating the reducible representations for all motions of atoms in
    a molecle.

    See Vincent, A. Molecular Symmetry and Group Theory, 2nd ed.; Wiley, 1997,
    pp  131.

    Parameters
    ----------
    a : int
        1 for E and C_n and -1 for i, S_n, and sigma (reflection)
    n : int
        n from C_n rotation (e.g., n = 2 for 180 degree rotation). E is
        equivalent to a C_1, a reflection is equal to an S_1, and an i is
        equivalent to an S_2
    k : int
        number of rotational increments (e.g., C^3_4 is n = 4 and k = 3)

    Returns
    -------
    np.float

    Examples
    --------
    # C_4
    >>> R(1, 4, 1)
    >>> np.float64(1.0000000000000002)
    # C^3_4
    >>> R(1, 4, 3)
    >>> np.float64(0.9999999999999997)
    # E
    >>> R(1, 1, 1)
    >>> np.float64(3.0)
    # i
    >>> R(-1, 2, 1)
    >>> np.float64(-3.0)
    # sigma
    >>> R(-1, 1, 1)
    >>> np.float64(1.0)
    """

    return a + 2 * np.cos(k * 2 * np.pi / n)


c5 = 1.618033988749895
c5_ = -0.6180339887498949
c7 = 2.246979603717467
c8 = 2.414213562373095
c8_ = -0.4142135623730949
atom_contribution = {'c1': [3],
                     'cs': [3, 1],
                     'ci': [3, -3],
                     'c2': [3, -1],
                     'c3': [3, 0, 0],
                     'c4': [3, 1, -1, 1],
                     'c5': [3, c5, c5_, c5_, c5],
                     'c6': [3, 2, 0, -1, 0, 2],
                     'c7': [3, c7, R(1, 7, 2), R(1, 7, 3), R(1, 7, 4), R(1, 7, 5), R(1, 7, 6)],
                     'c8': [3, R(1, 8, 1), 1, -1, R(1, 4, 3), R(1, 8, 3), R(1, 8, 5), R(1, 8, 7)],
                     'd2': [3, -1, -1, -1],
                     'd3': [3, 0, -1],
                     'd4': [3, 1, -1, -1, -1],
                     'd5': [3, c5, c5_, -1],
                     'd6': [3, 2, 0, -1, -1, -1],
                     'c2v': [3, -1, 1, 1],
                     'c3v': [3, 0, 1],
                     'c4v': [3, 1, -1, 1, 1],
                     'c5v': [3, c5, c5_, 1],
                     'c6v': [3, 2, 0, -1, 1, 1],
                     'c2h': [3, -1, -3, 1],
                     'c3h': [3, 0, 0, 1, -2, -2],
                     'c4h': [3, 1, -1, 1, -3, -1, 1, -1],
                     'c5h': [3, c5, c5_, c5_, c5, 1,  R(-1, 5, 1), R(-1, 5, 7), R(-1, 5, 3), R(-1, 5, 9)],
                     'c6h': [3, 2, 0, -1, 0, 2, -3, R(-1, 3, 5), R(-1, 6, 5), 1, R(-1, 6, 1), R(-1, 3, 1)],
                     'd2h': [3, -1, -1, -1, -3, 1, 1, 1],
                     'd3h': [3, 0, -1, 1, -2, 1],
                     'd4h': [3, 1, -1, -1, -1, -3, -1, 1, 1, 1],
                     'd5h': [3, c5, c5_, -1, 1, R(-1, 5, 1), R(-1, 5, 3), 1],
                     'd6h': [3, 2, 0, -1, -1, -1, -3, -2, 0, 1, 1, 1],
                     'd8h': [3, R(1, 8, 1), R(1, 8, 3), 1, -1, -1, -1, -3, R(-1, 8, 1), R(-1, 8, 3), R(-1, 4, 1), 1, 1, 1],
                     'd2d': [3, -1, -1, -1, 1],
                     'd3d': [3, 0, -1, -3, 0, 1],
                     'd4d': [3, R(-1, 8, 1), 1, R(-1, 8, 3), -1, -1, 1],
                     'd5d': [3, c5, c5_, -1, -3, R(-1, 10, 3), R(-1, 10, 1), 1],
                     'd6d': [3, R(-1, 12, 1), 2, R(-1, 4, 1), 0, R(-1, 12, 5), -1, -1, 1],
                     's4': [3, -1, -1, R(-1, 4, 3)],
                     's6': [3, 0, 0, -3, R(-1, 6, 5), 0],
                     's8': [3, R(-1, 8, 1), 1, R(-1, 8, 3), -1, R(-1, 8, 5), R(1, 4, 3), R(-1, 8, 7)],
                     't': [3, 0, 0, -1],
                     'th': [3, 0, 0, -1, -3, 0, R(-1, 6, 5), 1],
                     'td':[3, 0, -1, -1, 1],
                     'o': [3, 1, -1, 0, -1],
                     'oh': [3, 0, -1, 1, -1, -3, -1, 0, 1, 1],
                     'i': [3, R(1, 5, 1), R(1, 5, 2), 0, -1],
                     'ih': [3, R(1, 5, 1), R(1, 5, 2), 0, -1, -3, R(-1, 10, 1), R(-1, 10, 3), 0, 1]

}

# expanded into ints and floats

atom_contribution = {'c1': [3],
                     'cs': [3, 1],
                     'ci': [3, -3],
                     'c2': [3, -1],
                     'c3': [3, 0, 0],
                     'c4': [3, 1, -1, 1],
                     'c5': [3, c5, c5_, c5_, c5],
                     'c6': [3, 2, 0, -1, 0, 2],
                     'c7': [3, c7, 0.5549581, -0.801938, -0.801938, 0.5549581, c7],
                     'c8': [3, c8, 1, -1, 1, c8_, c8_, c8],
                     'd2': [3, -1, -1, -1],
                     'd3': [3, 0, -1],
                     'd4': [3, 1, -1, -1, -1],
                     'd5': [3, c5, c5_, -1],
                     'd6': [3, 2, 0, -1, -1, -1],
                     'c2v': [3, -1, 1, 1],
                     'c3v': [3, 0, 1],
                     'c4v': [3, 1, -1, 1, 1],
                     'c5v': [3, c5, c5_, 1],
                     'c6v': [3, 2, 0, -1, 1, 1],
                     'c2h': [3, -1, -3, 1],
                     'c3h': [3, 0, 0, 1, -2, -2],
                     'c4h': [3, 1, -1, 1, -3, -1, 1, -1],
                     'c5h': [3, c5, c5_, c5_, c5, 1, -0.381966, -c5 - 1, -c5 - 1, -0.381966],
                     'c6h': [3, 2, 0, -1, 0, 2, -3, -2, 0, 1, 0, -2],
                     'd2h': [3, -1, -1, -1, -3, 1, 1, 1],
                     'd3h': [3, 0, -1, 1, -2, 1],
                     'd4h': [3, 1, -1, -1, -1, -3, -1, 1, 1, 1],
                     'd5h': [3, c5, c5_, -1, 1, -0.381966, -2.618034, 1],
                     'd6h': [3, 2, 0, -1, -1, -1, -3, -2, 0, 1, 1, 1],
                     'd8h': [3, c8, c8_, 1, -1, -1, -1, -3, -c8_, -c8, -1, 1, 1, 1],
                     'd2d': [3, -1, -1, -1, 1],
                     'd3d': [3, 0, -1, -3, 0, 1],
                     'd4d': [3, -c8_, 1, -c8, -1, -1, 1],
                     'd5d': [3, c5, c5_, -1, -3, -c5, -c5_, 1],
                     'd6d': [3, 0.732051, 2, -1, 0, -2.732051, -1, -1, 1],
                     's4': [3, -1, -1, -1],
                     's6': [3, 0, 0, -3, 0, 0],
                     's8': [3, -c8_, 1, -c8, -1, -c8, 1, -c8_],
                     't': [3, 0, 0, -1],
                     'th': [3, 0, 0, -1, -3, 0, 0, 1],
                     'td': [3, 0, -1, -1, 1],
                     'o': [3, 1, -1, 0, -1],
                     'oh': [3, 0, -1, 1, -1, -3, -1, 0, 1, 1],
                     'i': [3, c5, c5_, 0, -1],
                     'ih': [3, c5, c5_, 0, -1, -3, -c5_, -c5, 0, 1]
 }
